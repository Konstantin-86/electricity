import type { RoomInfo } from "../FloorPlan/helpers/roomInfo";
import styles from "./RoomInfoPanel.module.css";

interface RoomInfoPanelProps {
  roomInfo: RoomInfo;
  onClose: () => void;
}

const RoomInfoPanel = ({ roomInfo, onClose }: RoomInfoPanelProps) => {
  if (!roomInfo.room) return null;

  return (
    <div className={styles.overlay} onClick={onClose}>
      <div className={styles.roomDetails} onClick={(e) => e.stopPropagation()}>
        <div className={styles.header}>
          <div className={styles.roomTitle}>üè† {roomInfo.room.name}</div>

          {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–∑–µ—Ç–∫–∞–º–∏ */}
          <div className={styles.roomSummary}>
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è—Ö */}
            {roomInfo.breakers.length > 0 && (
              <div className={styles.summarySection}>
                {roomInfo.breakers.map((breaker, index) => (
                  <div
                    key={`${breaker.id}-${index}`}
                    className={
                      breaker.isOn
                        ? styles.breakerItemOn
                        : styles.breakerItemOff
                    }
                  >
                    <p className={styles.breakerText}>{breaker.designation}</p>
                    <p className={styles.breakerText}>{breaker.panelName}</p>
                  </div>
                ))}
              </div>
            )}

            <button className={styles.closeButton} onClick={onClose}>
              <span>‚úï</span>
            </button>
          </div>
        </div>

        <div className={styles.wrapper}>
          {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Å–≤–µ—â–µ–Ω–∏–∏ */}
          {roomInfo.lighting.fixtureInfo && (
            <div className={styles.lightingInfo}>
              <h4 className={styles.sectionTitle}> –û—Å–≤–µ—â–µ–Ω–∏–µ</h4>
              <p>
                <strong>–¢–∏–ø —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∞:</strong>{" "}
                {roomInfo.lighting.fixtureInfo.name}
              </p>
              <p>
                <strong>–ú–æ–¥–µ–ª—å:</strong>{" "}
                {roomInfo.lighting.fixtureInfo.technicalInfo?.model}
              </p>
              <p>
                <strong>–¢–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è:</strong>{" "}
                {roomInfo.lighting.fixtureInfo.fixtureType}
              </p>
              <p>
                <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–º–ø:</strong> {roomInfo.lighting.lampCount}
              </p>
              <p>
                <strong>–°–≤–µ—Ç–æ–≤–æ–π –ø–æ—Ç–æ–∫:</strong>{" "}
                {roomInfo.lighting.fixtureInfo.technicalInfo?.luminousFlux} –ª–º
              </p>
              <p>
                <strong>–°—Ä–æ–∫ —Å–ª—É–∂–±—ã:</strong>{" "}
                {roomInfo.lighting.fixtureInfo.technicalInfo?.lifespan} —á–∞—Å–æ–≤
              </p>
              {roomInfo.lighting.fixtureInfo.technicalInfo?.safetyStandards && (
                <p>
                  <strong>–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</strong>{" "}
                  {roomInfo.lighting.fixtureInfo.technicalInfo.safetyStandards}
                </p>
              )}
            </div>
          )}
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑–µ—Ç–∫–∞—Ö */}
          {roomInfo.room.outlets && (
            <div className={styles.outletsSection}>
              <div className={styles.sectionTitle}>üîå –†–æ–∑–µ—Ç–∫–∏</div>
              <div className={styles.outletsInfo}>
                <p>
                  <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> {roomInfo.room.outlets.count}
                </p>
                {roomInfo.room.outlets && (
                  <p>
                    <strong>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ:</strong>
                    {roomInfo.room.outlets.count}{" "}
                  </p>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default RoomInfoPanel;
