import type { Room } from "../../types";
import styles from "./RoomCard.module.css";

interface RoomCardProps {
  room: Room;
  powerState: {
    hasPower: boolean;
    partialPower: boolean;
    powerDetails: {
      lighting: { hasPower: boolean; breakerIds: string[] };
      sockets: { hasPower: boolean; breakerIds: string[] };
    };
  };
}

const RoomCard = ({ room, powerState }: RoomCardProps) => {
  const { hasPower, partialPower, powerDetails } = powerState;

  const hasLighting = room.lightFixtures.length > 0;
  const hasSockets = room.outletGroups.length > 0;
  const hasLightingControl = powerDetails.lighting.breakerIds.length > 0;
  const hasSocketsControl = powerDetails.sockets.breakerIds.length > 0;

  return (
    <div
      className={`
      ${styles.roomCard} 
      ${hasPower ? styles.powered : styles.noPower}
      ${partialPower ? styles.partialPower : ""}
    `}
    >
      <h3>{room.name}</h3>
      <p>–¢–∏–ø: {room.type}</p>
      <p>–ü–ª–æ—â–∞–¥—å: {room.area} –º¬≤</p>

      {/* –°—Ç–∞—Ç—É—Å –ø–∏—Ç–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ–≥–¥–∞ */}
      <div className={styles.powerStatus}>
        {hasPower ? (
          partialPower ? (
            <span className={styles.partial}>‚ö† –ß–∞—Å—Ç–∏—á–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</span>
          ) : (
            <span className={styles.full}>‚úì –ü–æ–ª–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</span>
          )
        ) : (
          <span className={styles.off}>‚úó –ù–µ—Ç –ø–∏—Ç–∞–Ω–∏—è</span>
        )}
      </div>

      {/* –î–µ—Ç–∞–ª–∏ –ø–æ —Å–∏—Å—Ç–µ–º–∞–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ */}
      <div className={styles.systems}>
        {/* –°–≤–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏ –ò–õ–ò —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–º */}
        {(hasLighting || hasLightingControl) && (
          <div
            className={powerDetails.lighting.hasPower ? styles.on : styles.off}
          >
            üí° –°–≤–µ—Ç: {powerDetails.lighting.hasPower ? "–í–ö–õ" : "–í–´–ö–õ"}
          </div>
        )}

        {/* –†–æ–∑–µ—Ç–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–∑–µ—Ç–∫–∏ –ò–õ–ò —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∞–º–∏ */}
        {(hasSockets || hasSocketsControl) && (
          <div
            className={powerDetails.sockets.hasPower ? styles.on : styles.off}
          >
            üîå –†–æ–∑–µ—Ç–∫–∏: {powerDetails.sockets.hasPower ? "–í–ö–õ" : "–í–´–ö–õ"}
          </div>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å */}
      {(hasLighting || hasSockets) && (
        <div className={styles.equipment}>
          {hasLighting && (
            <span>–°–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤: {room.lightFixtures.length}</span>
          )}
          {hasSockets &&
            room.outletGroups.map((outlet, index) => (
              <span key={index}>
                –†–æ–∑–µ—Ç–æ–∫: {outlet.count} ({outlet.estimatedLoad}W)
              </span>
            ))}
        </div>
      )}
    </div>
  );
};

export default RoomCard;
